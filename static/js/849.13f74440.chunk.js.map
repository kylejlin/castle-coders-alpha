{"version":3,"file":"static/js/849.13f74440.chunk.js","mappings":"8JAQM,MAAOA,UAAqBC,EAAAA,GAAlCC,WAAAA,G,oBACU,KAAAC,SAAoC,KAC3B,KAAAC,aACM,qBAAdC,WAA6B,aAAcA,UAE5C,KAAAC,uBAAyB,KACE,YAA7BC,SAASC,iBAA+BC,KAAKC,WAAW,CAqDhE,CAlDS,eAAMA,GACND,KAAKL,cACRK,KAAKE,wBAEHF,KAAKN,gBACDM,KAAKG,aAEbH,KAAKN,eAAiBE,UAAUF,SAASU,QAAQ,UACjDN,SAASO,iBAAiB,mBAAoBL,KAAKH,wBACnDC,SAASO,iBAAiB,mBAAoBL,KAAKH,uBACrD,CAEO,gBAAMM,G,MACNH,KAAKL,cACRK,KAAKE,wBAEM,QAAbI,EAAAN,KAAKN,gBAAQ,IAAAY,GAAAA,EAAEC,UACfP,KAAKN,SAAW,KAChBI,SAASU,oBACP,mBACAR,KAAKH,wBAEPC,SAASU,oBACP,mBACAR,KAAKH,uBAET,CAEO,iBAAMY,GAIX,MAHe,CACbA,YAAaT,KAAKL,aAGtB,CAEO,iBAAMe,GACNV,KAAKL,cACRK,KAAKE,wBAKP,MAHe,CACbQ,cAAeV,KAAKN,SAGxB,CAEQQ,qBAAAA,GACN,MAAMF,KAAKW,YACT,sDAEJ,E","sources":["../node_modules/@capacitor-community/keep-awake/src/web.ts"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\r\n\r\nimport type {\r\n  IsKeptAwakeResult,\r\n  IsSupportedResult,\r\n  KeepAwakePlugin,\r\n} from './definitions';\r\n\r\nexport class KeepAwakeWeb extends WebPlugin implements KeepAwakePlugin {\r\n  private wakeLock: WakeLockSentinel | null = null;\r\n  private readonly _isSupported =\r\n    typeof navigator !== 'undefined' && 'wakeLock' in navigator;\r\n\r\n  private handleVisibilityChange = () => {\r\n    if (document.visibilityState === 'visible') this.keepAwake();\r\n  };\r\n\r\n  public async keepAwake(): Promise<void> {\r\n    if (!this._isSupported) {\r\n      this.throwUnsupportedError();\r\n    }\r\n    if (this.wakeLock) {\r\n      await this.allowSleep();\r\n    }\r\n    this.wakeLock = await navigator.wakeLock.request('screen');\r\n    document.addEventListener('visibilitychange', this.handleVisibilityChange);\r\n    document.addEventListener('fullscreenchange', this.handleVisibilityChange);\r\n  }\r\n\r\n  public async allowSleep(): Promise<void> {\r\n    if (!this._isSupported) {\r\n      this.throwUnsupportedError();\r\n    }\r\n    this.wakeLock?.release();\r\n    this.wakeLock = null;\r\n    document.removeEventListener(\r\n      'visibilitychange',\r\n      this.handleVisibilityChange,\r\n    );\r\n    document.removeEventListener(\r\n      'fullscreenchange',\r\n      this.handleVisibilityChange,\r\n    );\r\n  }\r\n\r\n  public async isSupported(): Promise<IsSupportedResult> {\r\n    const result = {\r\n      isSupported: this._isSupported,\r\n    };\r\n    return result;\r\n  }\r\n\r\n  public async isKeptAwake(): Promise<IsKeptAwakeResult> {\r\n    if (!this._isSupported) {\r\n      this.throwUnsupportedError();\r\n    }\r\n    const result = {\r\n      isKeptAwake: !!this.wakeLock,\r\n    };\r\n    return result;\r\n  }\r\n\r\n  private throwUnsupportedError(): never {\r\n    throw this.unavailable(\r\n      'Screen Wake Lock API not available in this browser.',\r\n    );\r\n  }\r\n}\r\n"],"names":["KeepAwakeWeb","WebPlugin","constructor","wakeLock","_isSupported","navigator","handleVisibilityChange","document","visibilityState","this","keepAwake","throwUnsupportedError","allowSleep","request","addEventListener","_a","release","removeEventListener","isSupported","isKeptAwake","unavailable"],"sourceRoot":""}